
= TODO'isms pertaining to the configs/dotfiles themselves =
-----------------------------------------------------------
== BUGS ==
* home-machines/.functions.sh has /some/ kind of weird bash syntax error (but
not exactly because `bash -n .functions.sh' says its ok).  It is located
I think around the clearcase ish.  Investigate.
** I verfied this because I'm doing some totally unrelated shell scripting 
shtuff and like all my functions were being printed to stdout.  Removing any
and all of those clearcase functions I wrote a while ago, stopped this
odd printing of functions to stdout.
** STEPS TO REPRODUCE:
**# write a dummy script that just sets a variable or soemthing
**# call dummy script like `bash -vx dummy.sh'
**# notice all the extra crap is is dumped out



== ENHANCEMENTS ==
=== dotfiles.sh ===
* all for single file operations, currently, its all or nothing
* make top-level shell dotfiles announce themselves (when tty interactive, of course)


== NOTES ==
* just a thought on host-specific shtuff : may want to consider wrapping those content blocks with /where-am-i-executing?/ tests so dont clutter up EVERY env with garbage.



== MISC ==
=== misc TODO ===
* rename "home-machines" something else; is incorrect.
** rename ideas
*** curr
*** active
** here's a totally diff approach
*** move all content currently in "home-machines" into root.
*** split out the "apps" folder (would need some way of making/getting updates to the dotfiles.sh syncer script tho...; perhaps git submodules?).
*** move all those archive/whatever folders into root as well, but name the folder like ".historical" ".archives" or something stupid, which i dont even know why i need since this is revision control but Im just a stupid human I guess.
* search for 'STUB' notes in-line in dotfiles for clean ups and additional werk.





= TODO'isms pertaining to the dotfiles.sh script =
--------------------------------------------------
* can do 'install' which copies from cwd to $HOME, but would be nice if could go the other way.
** ideas on what to call the commands
*** install (copies from cwd to $HOME)
**** install, mvin, in, put, push, update
*** nil--what to call the operation that copies from $HOME to cwd?
**** uninstall, mvout, out, get, pull, getfromhome
*** reverseinstall, `--reverse install'

