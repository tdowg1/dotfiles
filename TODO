

= TODO list for dotfiles =
----
== BUGS ==
* home-machines/.functions.sh has /some/ kind of weird bash syntax error (but
not exactly because `bash -n .functions.sh' says its ok).  It is located
I think around the clearcase ish.  Investigate.
** I verfied this because I'm doing some totally unrelated shell scripting
shtuff and like all my functions were being printed to stdout.  Removing any
and all of those clearcase functions I wrote a while ago, stopped this
odd printing of functions to stdout.
** STEPS TO REPRODUCE:
**# write a dummy script that just sets a variable or soemthing
**# call dummy script like `bash -vx dummy.sh'
**# notice all the extra crap is is dumped out
** NOTES ON HOWTO FIX ( pulled in from 'work-machines.notes.txt' ):
*** suggestions for howto possibly fix whawtever is the freaking problem with/or around the clearcase function guys... (dotfiles/work-machines/walrus/.dotfiles/functions.sh)
**** check that it's ok to have the `return' statement in a bash function, like I have it in a lot of the clearcase functions
**** check that the usage of "*"'s is ok
**** check that all of the bash syntax is correct
***** parens, curly braces, and quotes are balanced
***** run it through a bash cmdln syntax check
***** run it through bash "debugger"
***** open it in various IDE's/editors
***** run back through ALL of the revision history changes... trying to reproduce the bad behaviour.
**** specfic lines should focus on
***** search for 'if [[ -d "${x}" || -f "${x}" ]] ; then' because I dont think that's valid syntax... if its the OR operation you want, that's accomplished via '-o', like  ' if [[ -d "${x}" -o -f "${x}" ]] ; then'

* COMPLETE gracefully fail (i.e. no bash error) if __git_ps1 thinggy is not configured properly in the environment



== ENHANCEMENTS ==
* COMPLETE make top-level shell dotfiles announce themselves (when tty interactive, of course)
* find out howto get a keyboard key to do right-click (on Linux of course)


== NOTES ==
* COMPLETE just a thought on host-specific shtuff : may want to consider wrapping those content blocks with /where-am-i-executing?/ tests so dont clutter up EVERY env with garbage.



== MISC ==
=== misc TODO ===
* rename "home-machines" something else; is incorrect.
** rename ideas
*** curr
*** active
** here's a totally diff approach
*** move all content currently in "home-machines" into root.
*** split out the "apps" folder (would need some way of making/getting updates to the dotfiles.sh syncer script tho...; perhaps git submodules?).
*** move all those archive/whatever folders into root as well, but name the folder like ".historical" ".archives" or something stupid, which i dont even know why i need since this is revision control but Im just a stupid human I guess.
* search for 'STUB' notes in-line in dotfiles for clean ups and additional werk.
* add phisata's ~/.vimrc/ contents (has a neat little bash thinggy), and more
* copy /etc/bash_completion* shtuff from an appropriate box, into here.  alternatively, a more appropriate technique may be provided at
** http://bash-completion.alioth.debian.org/
* add license
** http://licence.visualidiot.com/




= TODO list for the dotfiles.sh script =
----
* can do 'install' which copies from cwd to $HOME, but would be nice if could go the other way.
** ideas on what to call the commands
*** install (copies from cwd to $HOME)
**** install, mvin, in, put, push, update
*** nil--what to call the operation that copies from $HOME to cwd?
**** uninstall, mvout, out, get, pull, getfromhome
*** reverseinstall, `--reverse install'

* ability to perform any command 1-by-1 / individually specifying 1 or more specific files
* ability to perform any command, but be propted for each

* for install command, be able to handle copying of directories, for instance i get this error
** cp: omitting directory `.vim'
** ALTERNATIVELY
*** could just have a special little script that sets up (and re-checks) the .vim//.vimrc setup, for example
**** copies .vim/ to home OR symlinks (checks symlink is set up) ~/.vim directory to .vim/
**** symlinks (checks symlink is set up) ~/.vimrc to ~/.vim/plugins/vimrc.vim

* totally different approach / alternative to the install cmd:
** setup-symlinks ++++ YES I LIKE THIS ONE
*** create symlink from home directory to target file, stored in the git working directory
** similarly, will need an teardown-symlinks cmd

* i got fed up and started just doign this
** ./dotfiles.sh diff | sed -n 's/\ and\ /   /p' | sed -n 's/Files\ /meld   /p' | sed -n 's/\ differ//p'
*** which generates output that can be exeucted, line-by-line, opening up each conflict within meld program




dotfiles under webserver path files/linux/*

when in a git working copy, on shazam, i get a nice supporting bash prompt...
* but on newjack i dont. whats the settings for that?
* after figuring it out on newjack, try to reproduce on bump (im not optimistic itll work there though)
* lol and weirdly, this looks better on newjack than shazam (the branch text is colored blue):
    [ teelah@newjack ~/dotfiles/home-machines ]$ bra -v
    * master 06bdcc7 [origin/master] misc dotfile changes (shazam)
    [ bdavies@shazam ~/dotfiles-merging/home-machines (master $=) ]$ bra -v
    * master 06bdcc7 [origin/master] misc dotfile changes (shazam)



change terminal prompt colors (vibv) for...
* <color ideas>: that bright green on like default mint
* newjack:
* bump: silvery, brand colors
* phi: purpley
* intel: bluey
* ipoowid:


aliases
logp
logs
logps
^^pretty sure have these. also want:
logsp



