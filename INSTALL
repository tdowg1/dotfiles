
== cmdln operations performed to get my env up with my github dotfiles ==
* Optionally (erm-this is more of a personal note), obtain authorized
openssh key so can interact with repo via git:// protocol... an ~/.ssh/config
might look like:
>>>
Host github.com
IdentityFile ~/.ssh/authorized-openssh-key
<<<

* Next, get the goods : clone repo
>>>
cd
git clone git@github.com:tdowg1/dotfiles
<<<

* append the following to .bashrc
>>>
source ~/.mainly.sh
<<<

* create symlinks to main bash configs, assuming they live under dotfiles/home-machines/, do
>>>
for i in .aliases.sh .functions.sh .gitconfig .gitignore_core.excludesfile  .gitk .htoprc .mainly.sh .pystartup  .screenrc .variables.sh .vim .vimrc .zshrc ; do test -e dotfiles/home-machines/${i} || echo "DNE $i"
 echo ln -s "dotfiles/home-machines/${i}"; 
done
# then do it without the echo (above) if you're satisfied or want to run a command individually
<<<

* open a new terminal.  Ensure env gets set up OK by checking for any errors messages.

* setup Vundle bundler (for vim)
>>>
git clone  http://github.com/gmarik/vundle.git  ~/.vim/bundle/vundle/
<<<

* (NOT RECOMMENDED) optionally, get a diff: determine which dotfiles were not installed to home directory:
>>>
cdd
./dotfiles.sh diff
# or simply:
$ZOMG_DOTFILES/dotfiles.sh diff
<<<

* (NOT RECOMMENDED) optionally, install: copy the other dotfiles to home directory by executing
>>>
cdd
./dotfiles.sh install
# or simply:
$ZOMG_DOTFILES/dotfiles.sh install
<<<

* optionally, continue on with INSTALL.extra


