
== cmdln operations performed to get my env up with my github dotfiles ==
* clone repo
>>>
cd
git clone git@github.com:tdowg1/dotfiles
<<<

* append the following to .bashrc
>>>
source ~/.mainly.sh
<<<

* create symlinks to main bash configs, assuming they live under dotfiles/home-machines/, do
>>>
for i in .aliases.sh .functions.sh .gitconfig .gitignore_core.excludesfile  .gitk  .mainly.sh .pystartup  .screenrc .screenrc-system-monitor  .tmux.conf .variables.sh .vim .vimrc .zshrc ; do test -e ~/${i} || echo "DNE ~/$i"
 echo ln -s "dotfiles/home-machines/${i}"; 
done
# then do it without the echo (above) if you're satisfied or want to run a command individually.

# And handle special cases:
mkdir -p ~/.config/htop/   # if necessary.
cd ~/.config/htop/
ln -s ../../dotfiles/home-machines/htoprc
<<<

* open a new terminal.  Ensure env gets set up OK by checking for any errors messages.

* setup Vundle bundler (for vim)
>>>
git clone  http://github.com/gmarik/vundle.git  ~/.vim/bundle/vundle/
<<<

* (NOT RECOMMENDED) optionally, get a diff: determine which dotfiles were not installed to home directory:
>>>
cdd
./dotfiles.sh diff
# or simply:
$ZOMG_DOTFILES/dotfiles.sh diff
<<<

* (NOT RECOMMENDED) optionally, install: copy the other dotfiles to home directory by executing
>>>
cdd
./dotfiles.sh install
# or simply:
$ZOMG_DOTFILES/dotfiles.sh install
<<<

* optionally, continue on with INSTALL.extra

* if wish to be able to commit to the dotfiles repo as well, obtain the github key that I use.

* update ~/.ssh/config to look something like:
>>>
Host github.com
IdentityFile ~/.ssh/authorized-openssh-key
<<<

* if becoming prompted for username when doing e.g. git push, verify that the remote.origin.url
is not set to an https but set to:
  git@github.com:tdowg1/dotfiles.git
by executing
git config remote.origin.url git@github.com:tdowg1/dotfiles.git

