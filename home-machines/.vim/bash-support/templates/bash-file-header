#!/bin/bash - 
#===============================================================================
#          FILE:  |FILENAME|
#         USAGE:  <see f_usage()>
#   DESCRIPTION:  <see f_usage()>
#       OPTIONS:  <see f_usage()>
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  |AUTHOR| (|AUTHORREF|), |EMAIL|
#       COMPANY:  |COMPANY|
#       VERSION:  1.0
#       CREATED:  |DATETIME|
#      REVISION:  ---
#===============================================================================
#PS4='[${LINENO}]+'
#typeset -ft $(typeset +f)
#set -o errexit
set -o nounset                              # Treat unset variables as an error
#set -o xtrace

f_usage(){
	local scriptname="$( basename "$0" )"
	cat <<__usageHEREDOC__
Usage: $scriptname a b c

This script 

--long-arg
                Option
and continues to next line

a               a1
and continues to next line

Examples
  $scriptname a b c

  $scriptname c d e

Enhancement Ideas
force           Simply 
and next line continuing
__usageHEREDOC__
   exit 1
}


if [[ $# != 3 ]] && [[ $# != 4 ]] ; then
   echo "ERROR: $# is not enough cmdln arguments"
   f_usage
fi



# ===================================================================
# PARSE CMDLN, VARIABLE DEFINITIONS, SANITY CHECKS && META GENERATION
ARGC="$#"
while [[ "$1" = -* ]] ; do
   case $1 in
      --pidfile) # specified like: --pidfile /tmp/mypidfile
         pid_file=$2
         shift 2
         ;;  
      --pidfile=?*) # specified like: --pidfile=/tmp/mypidfile
         pid_file=${1#--pidfile=}
         shift
         ;;  
      --force) # no-value arg / flag
         force="force"
         shift
         ;;  
      *)  
        echo "ERROR case matched wildcard"
        f_usage
        ;;  
   esac
done

while [ "$#" -gt "0" ] ; do
   case $1 in
      --force) # specified like: --key
         ISFORCED="TRUE"
         ;;
      --path-to-runner-script=?*) # specified like: --key=value
         PATH_TO_RUNNER_SCRIPT="${1#--path-to-runner-script=}"
         ;;
      -u|--usage|-h|--help) # specified like: --key
         f_usage_long
         ;;
      *)
         echo "ERROR: invalid cmdln arguments $1"
         f_usage
         ;;
   esac
   shift
done

#some test condition

if [[ $? != 0 ]] ; then
   echo "ERROR: $source_filesystem must be a mountpoint"
   f_usage
fi



: ${ISFORCED:="FALSE"}
# required to be defined by now; think "<cfparam=* required=yes..."
: ${TEMPDIR2:?ERROR: not specified}
: ${HOME:?ERROR: HOME variable must be set}

# vars to set if not set; think "<cfparam=*..."
: ${TEMPDIR:=/tmp}


# e.g. ../amazondev/runsparqlizerODSE.sh
: ${PATH_TO_RUNNER_SCRIPT:? "ERROR: --path-to-runner-script is required"}
fullPathToRunnerScript="$( f_getfullpath "${PATH_TO_RUNNER_SCRIPT}" )"


# ===================================================================
# FINALLY (!) DO WORK


